Subject: [announce] Vicare/Expat revision 1.0b5

			      Vicare/Expat
			      ============


This  package is a  distribution of  C and  Scheme libraries  for Vicare
Scheme, an R6RS compliant Scheme  implementation in the form of a native
compiler for x86 architectures, officially supporting GNU+Linux systems;
it provides  bindings for  the Expat C  language library, an  XML parser
library.  If the package  Nausicaa/Scheme is installed: a Nausicaa front
end  library  for  Vicare/Expat  is installed,  providing  higher  level
constructs.

  This package makes use of the GNU Autotools.

  Vicare Scheme needs  to be compiled with FFI  support enabled, because
Expat heavily relies on C callbacks.

  The latest version of this package can be downloaded from Github:

	<http://code.google.com/p/vicare-scheme/downloads/list>

the home page of the Vicare project is at:

               <http://marcomaggi.github.com/vicare.html>

development takes place at:

	      <http://github.com/marcomaggi/vicare-expat/>

  The home page of Nausicaa is at:

	      <http://marcomaggi.github.com/nausicaa.html>

  The last  time the  author bothered to  update this paragraph,  he had
tested Expat version 2.0.1; the Expat library is available at:

		    <http://expat.sourceforge.net/>

notice  that  unofficial  Expat   documentation  in  Texinfo  format  is
available in the Nimby-Doc project at:

		<http://github.com/marcomaggi/nimby-doc>

and also online:

	     <http://marcomaggi.github.com/docs/expat.html>

Expat must be compiled to handle UTF-8 strings.


Notes for revision 1.0b5
------------------------

*


Notes for revision 1.0b4
------------------------

* No new code.

* The GNU  Autotools infrastructure has  been revised to  use Automake's
  parallel  test harness  and  adjust the  installation  path of  Scheme
  libraries to:

			$(libdir)/vicare-scheme


Notes for revision 1.0b3
------------------------

* Fixed Autotools infrastructure.

* Code fixes to make it work under recent Vicare releases.


Notes for revision 1.0b2
------------------------

* Changed   installation    directory   for   Scheme    libraries   from
  $(libdir)/vicare to $(libdir)/scheme.


Notes for revision 1.0b1
------------------------

* Bug fix  release.  The garbage  collection hook to  automatically free
  XML parsers was not registered.


Notes for revision 1.0b0
------------------------

* Here is an example program:

  #!r6rs
  (import (vicare)
    (vicare expat)
    (vicare expat constants)
    (prefix (vicare ffi) ffi.))

  (define xml-utf8
    (string->utf8
     "<!-- this is a test document -->\
     <stuff>\
     <thing colour=\"yellow\">\
     <alpha>one</alpha>\
     <beta>two</beta>\
     </thing>\
     <thing>\
     <alpha>123</alpha>\
     <beta>456</beta>\
     </thing>\
     </stuff>"))

  (define (start-callback data element attributes)
    (let ((element    (ffi.cstring->string element))
          (attributes (ffi.argv->strings attributes)))
      (pretty-print (list 'start element attributes))))

  (define (end-callback data element)
    (let ((element (ffi.cstring->string element)))
      (pretty-print (list 'end element))))

  (define (cdata-callback data buf.ptr buf.len)
    (let ((text (ffi.cstring->string buf.ptr buf.len)))
      (pretty-print (list 'cdata text))))

  (define (comment-callback data cstr)
    (let ((text (ffi.cstring->string cstr)))
      (pretty-print (list 'comment text))))

  (let ((parser   (XML_ParserCreate))
        (start    (XML_StartElementHandler  start-callback))
        (end      (XML_EndElementHandler    end-callback))
        (cdata    (XML_CharacterDataHandler cdata-callback))
        (comment  (XML_CommentHandler       comment-callback)))
    (XML_SetElementHandler       parser start end)
    (XML_SetCharacterDataHandler parser cdata)
    (XML_SetCommentHandler       parser comment)
    (XML_Parse parser xml-utf8 #f #t)
    (ffi.free-c-callback start)
    (ffi.free-c-callback end)
    (ffi.free-c-callback cdata)
    (ffi.free-c-callback comment))

  (flush-output-port (current-output-port))

which prints:

  (comment " this is a test document ")
  (start "stuff" ())
  (start "thing" ("colour" "yellow"))
  (start "alpha" ())
  (cdata "one")
  (end "alpha")
  (start "beta" ())
  (cdata "two")
  (end "beta")
  (end "thing")
  (start "thing" ())
  (start "alpha" ())
  (cdata "123")
  (end "alpha")
  (start "beta" ())
  (cdata "456")
  (end "beta")
  (end "thing")
  (end "stuff")

* The documentation mentions the  Nausicaa/Expat package, which has been
  not yet released to support this backend.


### end of file
# Local Variables:
# mode: text
# fill-column: 72
# paragraph-start: "*"
# End:
